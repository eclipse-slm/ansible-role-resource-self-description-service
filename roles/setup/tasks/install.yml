---
- name: Set Download and binary name
  ansible.builtin.include_tasks: helper/set_download_url_and_binary.yml

- name: "Create '{{ username }}' User"
  ansible.builtin.user:
    name: "{{ username }}"

- name: "Check download destination"
  ansible.builtin.stat:
    path: "{{ download_path }}"
  register: stat_download_folder

- name: "Create a download destination at {{ download_path }}"
  ansible.builtin.file:
    path: "{{ download_path }}"
    state: directory
    owner: "{{ username }}"
    mode: '0755'
  when: stat_download_folder.stat.exists == false

- name: Configure Ubuntu Guest
  ansible.builtin.include_tasks: helper/configure_ubuntu.yml
  when: ansible_os_family == "Debian"

- name: "Check download file"
  ansible.builtin.stat:
    path: "{{ download_path }}{{download_file_name}}"
  register: stat_download_file

- name: "Download resource-self-description-service in version {{ resource_self_description_service_version }}"
  ansible.builtin.get_url:
    url: "{{ download_url }}"
    dest: "{{ download_path }}{{download_file_name}}"
    owner: "{{ username }}"
  when: stat_download_file.stat.exists == false

- name: "Change owner of folder {{ download_path }}"
  ansible.builtin.file:
    path: "{{ download_path }}"
    owner: "{{ username }}"
    recurse: yes

- name: "Copy service file"
  ansible.builtin.template:
    src: resource-self-description-service.service.j2
    dest: /etc/systemd/system/resource-self-description-service.service
    force: yes


# iptables -A INPUT -p tcp --dport 9100 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
- name: "Add rule for port {{port}}"
  ansible.builtin.iptables:
    action: append
    chain: INPUT
    protocol: tcp
    destination_port: "{{port}}"
    ctstate: ["NEW", "ESTABLISHED"]
    match: ["conntrack"]
    jump: "ACCEPT"
  changed_when: false

- name: "Restart firewalld service (RedHat)"
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: firewalld
  when: ansible_os_family == "RedHat"
  changed_when: false


- name: "customize /etc/environment"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item.ip }} {{ item.name }}"
    state: present
    create: yes

  loop:
    - { ip: "{{ slm_host_ip }}", name: "{{ slm_host_name }}" }
    - { ip: "{{ consul }}", name: "consul" }
    - { ip: "{{ aas_registry }}", name: "aas-registry" }
    - { ip: "{{ aas_repository }}", name: "aas-repository" }
    - { ip: "{{ submodel_registry }}", name: "submodel-registry" }
  when: (item.ip is defined) and (item.ip|length > 0)
  become: yes

- ansible.builtin.include_role:
    name: "vault"
    tasks_from: add_certificate.yml
  vars:
    vault_url: "{{ lookup('env', 'VAULT_URL') }}"
    role_id: "{{ lookup('env', 'VAULT_APPROLE_ROLE_ID') }}"
    secret_id: "{{ lookup('env', 'VAULT_APPROLE_SECRET_ID') }}"
    resource_id: "{{ resource_id }}"
    folder: "{{ download_path }}certs"


- name: "Start resource-self-description-service service"
  ansible.builtin.systemd:
    state: started
    daemon_reload: yes
    name: resource-self-description-service